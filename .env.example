# Thread Configuration - 线程配置
# 生成时采用的最大线程数，5-10即可。会带来成倍的API调用费用，不要设置过高！
MAX_THREAD_NUM=5


# Server Configuration - Docker服务配置
# 前端服务端口
FRONTEND_PORT=80
# 后端服务端口
BACKEND_PORT=7860
# 后端服务监听地址
BACKEND_HOST=0.0.0.0
# Gunicorn工作进程数
WORKERS=4
# 每个工作进程的线程数
THREADS=2
# 请求超时时间（秒）
TIMEOUT=120


# MongoDB Configuration - MongoDB数据库配置
# 安装了MongoDB才需要配置，否则不用改动
# 是否启用MongoDB，启用后下面配置才有效
ENABLE_MONGODB=false
# MongoDB连接地址，使用host.docker.internal访问宿主机MongoDB
MONGODB_URI=mongodb://host.docker.internal:27017/
# MongoDB数据库名称
MONGODB_DB_NAME=llm_api
# 是否启用API缓存
ENABLE_MONGODB_CACHE=true
# 缓存命中后重放速度倍率
CACHE_REPLAY_SPEED=2
# 缓存命中后最大延迟时间（秒）
CACHE_REPLAY_MAX_DELAY=5


# API Cost Limits - API费用限制设置，需要依赖于MongoDB
# 每小时费用上限（人民币）
API_HOURLY_LIMIT_RMB=100
# 每天费用上限（人民币）
API_DAILY_LIMIT_RMB=500
# 美元兑人民币汇率
API_USD_TO_RMB_RATE=7


# Wenxin API Settings - 文心API配置
# 文心API的AK，获取地址：https://console.bce.baidu.com/qianfan/ais/console/applicationConsole/application
WENXIN_AK=
# 文心API的SK
WENXIN_SK=
# 文心默认主模型
WENXIN_DEFAULT_MODEL=ERNIE-Novel-8K
# 文心默认辅助模型
WENXIN_DEFAULT_SUB_MODEL=ERNIE-3.5-8K


# Doubao API Settings - 豆包API配置
# 豆包API密钥
DOUBAO_API_KEY=
# 豆包主模型endpoint_id，需要获取endpoint_id才能调用
DOUBAO_MAIN_ENDPOINT_ID=
# 豆包辅助模型endpoint_id
DOUBAO_SUB_ENDPOINT_ID=
# 豆包默认主模型，填main_endpoint_id对应的模型名
DOUBAO_DEFAULT_MODEL=doubao-pro-32k
# 豆包默认辅助模型，填sub_endpoint_id对应的模型名
DOUBAO_DEFAULT_SUB_MODEL=doubao-lite-32k


# GPT API Settings - GPT API配置
# API基础URL，国内不用中转地址无法访问openai，需要配置
GPT_BASE_URL=
# OpenAI API密钥
GPT_API_KEY=
# 默认主模型，可以是GPT模型，也可以是兼容openai接口的大模型
GPT_DEFAULT_MODEL=gpt-4o
# 默认辅助模型，不要选择费用高的模型
GPT_DEFAULT_SUB_MODEL=gpt-4o-mini


# Zhipuai API Settings - 智谱AI配置
# 智谱AI的API密钥，只需要获取api_key就能调用，比较推荐
ZHIPUAI_API_KEY=
# 智谱AI默认主模型
ZHIPUAI_DEFAULT_MODEL=glm-4-plus
# 智谱AI默认辅助模型
ZHIPUAI_DEFAULT_SUB_MODEL=glm-4-flashx